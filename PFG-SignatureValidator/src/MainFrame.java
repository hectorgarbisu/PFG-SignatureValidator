/*
 * This is part of my grade project
 * All its code is free to use and modify
 */

import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;

/**
 * @author geco
 *
 * Description: This program helps to capture movements done with the mouse. The
 * sequence of positions are stored along a label for each input. The list of
 * positions and the label will be used later for Machine Learning.
 */
public class MainFrame extends javax.swing.JFrame {

    // temporal data regarding mouse movement is considered relevant
    // stating a fixed period helps to differentiate between fast and slow
    // mouse swipes
    private final int PERIOD = 20; //miliseconds
    private final int DIM1 = 300;
    private final int DIM2 = 300;

    public MainFrame() {
        initComponents();
        userDir = "";
        String strPathJARFile = getClass().getProtectionDomain().getCodeSource().getLocation().getPath(); 
        File JARFile = new File(strPathJARFile); 
        if(JARFile.exists() && JARFile.isFile()) { 
            userDir = JARFile.getParent() + java.io.File.separatorChar; 
        }
        files = loadFileList(userDir);
        updateFrame();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        canvasPanel1 = new CanvasPanel();
        controlPanel = new javax.swing.JPanel();
        prevSignatureButton = new javax.swing.JButton();
        nextSignatureButton = new javax.swing.JButton();
        labelLabel = new javax.swing.JLabel();
        countLabel = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();
        canvasPanel2 = new CanvasPanel();

        javax.swing.GroupLayout canvasPanel1Layout = new javax.swing.GroupLayout(canvasPanel1);
        canvasPanel1.setLayout(canvasPanel1Layout);
        canvasPanel1Layout.setHorizontalGroup(
            canvasPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );
        canvasPanel1Layout.setVerticalGroup(
            canvasPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Figure reader");

        prevSignatureButton.setText("<");
        prevSignatureButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevSignatureButtonActionPerformed(evt);
            }
        });

        nextSignatureButton.setText(">");
        nextSignatureButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextSignatureButtonActionPerformed(evt);
            }
        });

        labelLabel.setText("label");

        countLabel.setText("count");

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(prevSignatureButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nextSignatureButton)
                .addGap(6, 6, 6)
                .addComponent(labelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(deleteButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(countLabel)
                .addContainerGap())
        );
        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prevSignatureButton)
                    .addComponent(nextSignatureButton)
                    .addComponent(labelLabel)
                    .addComponent(countLabel)
                    .addComponent(deleteButton)))
        );

        javax.swing.GroupLayout canvasPanel2Layout = new javax.swing.GroupLayout(canvasPanel2);
        canvasPanel2.setLayout(canvasPanel2Layout);
        canvasPanel2Layout.setHorizontalGroup(
            canvasPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );
        canvasPanel2Layout.setVerticalGroup(
            canvasPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(controlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(canvasPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(controlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(canvasPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void prevSignatureButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevSignatureButtonActionPerformed
        currentFileIndex = (filesCount+currentFileIndex-1)%filesCount;
        updateFrame();
    }//GEN-LAST:event_prevSignatureButtonActionPerformed

    private void nextSignatureButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextSignatureButtonActionPerformed
        currentFileIndex = (filesCount+currentFileIndex+1)%filesCount;
        updateFrame();
    }//GEN-LAST:event_nextSignatureButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        currentFile.delete();
        files.remove(currentFileIndex);
        filesCount-=1;
        currentFileIndex = (filesCount+currentFileIndex)%filesCount;
        updateFrame();
    }//GEN-LAST:event_deleteButtonActionPerformed

//    private void clearCanvas() {
//        VectorialDataSample vds = new VectorialDataSample(PERIOD,authorField.getText());
//        canvasPanel2.drawVectorialDataSample(vds);
//    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private CanvasPanel canvasPanel1;
    private CanvasPanel canvasPanel2;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JLabel countLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel labelLabel;
    private javax.swing.JButton nextSignatureButton;
    private javax.swing.JButton prevSignatureButton;
    // End of variables declaration//GEN-END:variables
    private int currentFileIndex = 0;
    private int filesCount = 0;
    private File currentFile;
    private ArrayList<File> files = loadFileList("./");
    private String userDir;
    
    private ArrayList<File> loadFileList(String path) {
        File directory = new File(path);
        File[] fList = directory.listFiles();
        filesCount = fList.length;
        return new ArrayList<File>(Arrays.asList(fList));
    }
    private void updateFrame() {
        filesCount = files.size();
        if (filesCount < 1) {
            return;
        }
        currentFile = files.get(currentFileIndex);
        VectorialDataSample vds = VectorialDataSample.readVDS(currentFile);
        canvasPanel2.drawVectorialDataSample(vds);
        labelLabel.setText(vds.getLabel());
        countLabel.setText((currentFileIndex+1)+"/"+filesCount);
    }

}
